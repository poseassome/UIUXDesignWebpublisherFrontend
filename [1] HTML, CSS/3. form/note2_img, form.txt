<img src="파일 위치">

  -ROOT를 url 폴더로 봤을 때 

    **1. jpg을 불러올 때
      <img src="1.jpg">
      <img src="./main/1.jpg">

    **2.jpg을 불러올 때
      <img src="images/2.jpg">
      <img src="./main/images/2.jpg">

   **3.jpg을 불러올 때
      <img src="../3.jpg">
      <img src="./3.jpg">

   **4.jpg을 불러올 때
     <img src="../sub/4.jpg">
     <img src="./sub/4.jpg">

  -앞은 상대경로
    내 위치를 기준으로 다른 파일의 위치를 설명
  -뒤는 절대경로
    시작하자마자 제일 꼭대기층에서부터 찾는 방법
    './' 나 'C:\~', 'http://', 'ftp://~~'


  1) 다른 사이트의 자원을 사용하려고 한다.
    >무조건 'http://' 부터

  2) 폴더를 열어서 봐야한다.
    >'폴더이름/'

  3) 폴더 바깥으로 나가야한다.
    >'../' (단, 지금있는 폴더에서 한번만 나감)
    >'../../' (두번 나감-두 폴더 밖에)

  4) 제일 꼭대기 층으로 한번에 가고 싶으면
    >'./'

  5) 경로가 끝날 때는 무조건 '파일이름.EXT'



<table>

  3x3 table 만들기
    <table>
      <thead>
        <tr>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td>
        </tr>
      </tbody>
    </table>

  우리는 표를 볼 때 합계 정보가 먼저 눈에 들어온다.
  시각장애인분들은 들어서 알아야되는데, 합계가 밑에 있으면 불편하다.
    >> <thead> 밑에 합계의 내용을 가지는 <tfoot>을 작성한다.
    >> 보이는 것은 똑같이 밑에 위치한 것으로 보임

  표의 제목은 <table> 밑에 <caption>을 쓴다.
    BUT 일부 screen reader에서는 
          caption을 이해하지 못하는 것도 있고,
          summary를 이해하지 못하는 것도 있음
    따라서 caption과 summary를 같이 작성을 해주는데
          이 때, 같은 속성값을 작성하지 않는다.
          >>caption과 summary를 같이 이해할 수 있기 때문에
  

  -col : 같은 순서에 있는 칸들을 그룹화
  -colgroup : col의 집합
  
  -thead / tfoot / tbody : 각 셀들의 역할별 구분
    thead : 제목
    tfoot : 결과
    tbody : 내용
    필요하지 않은 태그들은 생략 가능
    태그 사용 시 반드시 위 순서대로 사용    
  
  -id(속성) : 제목 셀에 이름 부여
  -headers(속성) : 해당 셀의 제목 셀 지정
    ex) 리더기가 '삼성 태블릿'으로 읽으려면 해당 <td>에 headers="1st_title_id 2nd_title_id" 작성
  


** form **
  1. 모든 양식은 <form> ~ </form> 안에서 작성

  2. 모든 양식은 이름(name AND id) 입력
      <??? name="" id="">

  3. 대부분의 양식은 <input> 태그의 "type" 속성으로 정의
      <input type="종류 선언">

  4. <select>, <textarea>, <button>은 독립 태그   /이 외에는 <input> 혼자 만든다.
      <select>
        <option> ~ </option>    /value를 써서 전송할 값 입력
        <option> ~ </option>    /처음부터 선택된 상태이고 싶으면 해당 option에 selected 입력
      </select>

      <textarea rows=" " cols=" "> </textarea>

      <button type=" ">TEXT</button>


  <input type=" ">
    *type 속성
      1. text
         -value : 실제 글자로 입력창에 보여짐
                  클릭하면 커서가 뒤로 가고, value 글자도 선택 가능함
         -placeholder : 실제 글자는 아니고 입력창에 보여짐
                        클릭하면 커서가 앞에 있고, text를 입력하면 지워짐
          >>이 두 개를 같이 쓰면 value만 보이고 placeholder는 안 보임.

         -size : 입력창 길이 조절 (한 칸에 몇 글자가 보이게 할거야)
                 실제로는 글자수가 조금 다르게 보여지고 있음

                 실무에서는 잘 안 쓴다.
                 왜? CSS에서 하면 되니까

         -maxlength : 최대 글자 수
                      텍스트 작성 시 제한이 생김
         -minlength : 최소 글자 수
                      전송 기능 실행했을 때 기능이 보임 -알림창(브라우저 지원)이 뜬다

         -readonly : 속성값을 쓰지 않아도 됨. (xhtml은 속성값이 있어야 됨, 값이 없는 속성들은 똑같이 속성 이름을 쓴다.)
                     JS이용해서 글자를 쓸 순 있음.
                     드래그하게 만들 수 있지만 쓸 수 없음. 읽기만 가능함
         -disabled : 속성값을 쓰지 않아도 됨. (xhtml은 속성값이 있어야 됨, 값이 없는 속성들은 똑같이 속성 이름을 쓴다.)
                     사용하면 입력창에 회색 배경이 생김.

          readonly vs disabled
            >>이 두 개를 같이 쓸 수 없음
             readonly는 안에 있는 텍스트가 전송되지만,
             disabled는 안에 있는 텍스트가 전송 안 됨.

            ex) 게시판에서 공개/비공개 설정할 때 비밀번호 입력칸 유무
                공개일 때는 비밀번호 전달 안되게, 비공개일 때는 비밀번호 사용

                공개일 때 비밀번호가 입력이 되도 전송이 되지 않게 -> disabled

      2. password
         -text와 동일한 속성이나 보이는게 특수문자
         -value : 이것도 특수문자로 보임
         -placeholder : 글자가 보이지만 직접 입력하면 특수문자로 보임

      3. checkbox
         -다중선택 가능
         -checkbox 옆에 글자는 설명하기 위한 글자로 서로 상관없는 관계임 (전송되는 글자x)

         -value : check 했을 때 실제로 전달할 값

         -checked : 미리 check되어 처음부터 보임

      4. radio
         -단일선택
         -radio 옆에 글자는 설명하기 위한 글자로 서로 상관없는 관계임 (전송되는 글자x)
         -이름(name)이 같은 것 중에서 하나만 선택하는 것
          name=""라 해도 브라우저에서 name1, name2 부여해서 다른 이름으로 인지함 -> 다중선택 됨

         -checked : 미리 check되어 처음부터 보임

      5. image
         -하는 일은 submit이지만 사용법은 <img>
         -CSS를 활용하기 전에 사용하던 방식

      6. file
         -파일 선택 기능

      7. hidden
         -text와 동일하지만 화면에 보이지 않는 text 입력창을 쓸 때 사용
         -그 화면에 담겨있어야하는 정보이기는 하나 사용자에게 보여줄 필요는 없는 정보들을 담아둘 때 사용

         -보이지 않는 정보? 공지사항에서 로그인을 하고나서 공지사항창으로 돌아갈 때
                           이전 페이지에 대한 정보를 알아야 돌아간다.
                           하지만 이를 사용자에게 보여줄 필요는 없다.

      8. button
         -아무 기능 없음
         -따라서, 어떤 기능이든 연결할 수 있기 때문에 가장 많이 사용함.

         -value : 버튼 이름 정의

      9. submit
         -전송기능이 있음
         -<form>안에서 사용자가 입력한 정보들은 submit 버튼을 눌렀을 때, method 방식으로 action의 page에 전송이 됨.

         -value : 버튼 이름 정의

      10. reset
         -<form>안에 입력한 정보들을 처음 상태로 되돌릴 때 사용 (전송x)


      >> 8. 9. 10.은 이제 사용하지 않고 <button> 으로 만든다. 

      >> <button>으로 작성하고 cSS를 활용해서 이미지처럼 보이게 할 수 있다.
        이런 의도로 CSS 활용하기 전에 나온게 <input type="image">


    * (HTML5에서) 추가된 type 속성값
      1. 날짜 관련 type
         -datetime
          <input type="datetime">
          <input type="datetime-local">

         -week
          <input type="week">

         -month
          <input type="month">

         -date
          <input type="date">

         -time
          input type="time">

      2. email
         <input type="email">

      -똑같이 텍스트를 써도 장치들은 어떤 형식의 내용이 들어가는 지 인지한다.

      3. url
         <input type="url">
         -작성할 때는 http:// 부터 쓴다.

      4. search
         <input type="search">

         -(tmi) explore 하위 버전에서는 모든 text 입력창에 'x'가 생김
          
            ex) Daum 페이지 소스
                input::-ms-clear{display:none}

                vendor prefix : 브라우저별 접두어  //-ms-

      5. number
         <input type="number" min="1" max="100">

      6. range
         <input type="range" min="0" max="100" step="10" value="0">

      7. tel
         <input type="tel">

      8. file
         <input type="file" accept="image/*" multiple>

         -옛날에는 이미지 파일만 선택 가능하게 만들려면,
          
          JS이용해서 파일명을 거꾸로 읽어 '.'만날 때 까지,
          그 글자가 jpg,..랑 똑같아? 판단시킴

         -지금은 accept를 이용해서 특정 파일만 볼 수 있게 됨.

         -multiple을 추가해서 여러 개의 파일 선택 가능하다.


    *input Element의 새로운 Attribute
      ~xhtml : <tag property = "value">
      html5 : <element attribute = "value">

      1. placeholder
         <input type="text" placeholder="아이디">

      2. autofocus
         <input type="text" autofocus>

         <a>, <form>에만 생기지만 (tabindex)를 이용해서 이 외에도 적용시킬 수 있음.
         화면 켜서 시작하면 커서가 생기게 해

         한 페이지에 한 번만 사용

      3. required
         -필수 입력 항목 지정
         -title 속성을 이용하여 추가 메세지 지정 가능
         -mobile 일부 구현

         <input type="text" required="required" title="ex) 010-0000-0000">

         <body>안에 있는 모든 요소에서 사용 할 수 있음

      여기에 웹 접근성이나 표준성을 향상시키기위한 방법이 더 있음

      ---------------------접근성 향상 마크업 시---------------------
      5. <input> 요소들은 <label>과 함께 사용

      6. <input> 요소들은 <fieldset>이나 <div>안에 작성


    * 관련 태그(속성)
      1. fieldset : 양식의 소그룹
         -일정한 기준, 목적, 의미가 있음
         -단순히 디자인때문이면 <div>로 묶어줌

      2. legend : fieldset의 제목
      
      3. label : 필드와 텍스트의 그룹
         -<label> 하나는 하나의 <input>에 붙인다.

         -사용방법 2가지
          1) <label>안에 텍스트, <input>을 같이 쓴다.
              입력창 옆 텍스트에 커서 표시가 안되고, 텍스트 누르면 입력창에 커서 표시됨.
              screen reader에서도 아이디 쓰는 곳이라고 알려줌

          2) <label>안에 텍스트만 담는다.
              <label for="id값">
               (label>라벨지에 이름써서 (for)위치에 붙이기
               한 곳에 한 번만 사용한다.

      4. for(속성) : 연결하고자 하는 필드의 id 값 작성 