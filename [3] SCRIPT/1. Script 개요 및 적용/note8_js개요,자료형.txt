들어서 알고있다고 그게 내 지식인 것은 아니다.
물었을 때 대답이 나와야한다.

스크립트부터는 프로그래밍 언어이다.

우리가 사용하는 컴퓨터는 역할에 따라서 크게 2가지가 있다.
  1) Client
    : 어떤 정보르 요청하거나(request) 요청한 정보를 받는 컴퓨터
      CSL(Client Side Language) - html, css, js <-소스보기하면 다 나옴.
  2) Server
    : 요청받은 정보를 응답(response)해주는 컴퓨터
      SSL(Server Side Language) - php, asp, jsp <-절대 liveserver 이런거 안됨.
                                  php 확인 방법 - 저장하고 FTP 업로드 하고, 업로드한 파일주소 접속해서 확인한다.

자바스크립트는 html, css보다 역사가 짧지만 웹 표준에도 선정되어있고 보편화되어있음.
  -왠만한 기능은 코드가 다 있음. (nav, top menu 등등)
  -검색해서 있는 코드 가져다가 써도 됨. (있는거 사용하는 건 기술임.)
   But, 나에게 맞게 고쳐 사용하기 --> 그래서 기본이 중요한 것 !


* 자바스크립트
  1. 웹 브라우저에서 읽고 실행되는 언어
     -Client Side Language
  2. 보안성이 없음
     -소스보기하면 다 나온다.
  3. HTML 내에 작성
     -웹 브라우저는 원래 html를 해석하는 장치.
      html은 단순하다 정적이다라는 특징에서
        단순한 부분을 보완하기위해 개발된 언어가 css이고,
        정적인 부분을 보완하기위해 개발된 언어가 js이다.
     -CSS, JS는 절대로 단독으로 사용할 수 없다.
  4. ⭐대소문자의 구분 엄격 (aaa ≠ AAA)
     -html 대소문자 구분 X
     -css  대소문자 구분 O
        tag, { } 는 구분하지 않지만, .class_name 은 구분한다.
     -js   대소문자 구분 O
        전체에서 대소문자 구분하여 작성해야 함.

* 적용방법
  1. 내부 스크립트
    - html 문서 내에 스크립트 정의 후 직접 작성
    - 필요한 위치에
        <script type="text/javascript">
          스크립트 효과
        </script>

  2. 외부 스크립트
    - 스크립트 효과를 다른 문서에 작성하고 "이름.js"로 저장
    - 효과를 적용할 문서에
        <script type="text/javascript" src="이름.js">
          다른 문장 작성 금지 (실행되지 않음)
        </script>


스크립트는 잘못된 부분을 잡아주는 디버그가 있음 (플러그인으로도 있음)
  - 브라우저 > 개발자도구 > Console탭에서 확인할 수 있음.

★HTML, javascript 공통점 : 한 줄씩 차례대로 실행된다.★
★HTML, javascript 차이점 : 연산 능력 존재 / 상호작용 가능★


(( 구조 비교 ))
HTML
    <element attribute="value">

CSS
    selector {property:value}

JAVASCRIPT
    object.property="value"
      '.' 스크립트에서 조사('이', '가', '에' etc) 역할

    굳이 비교해서 보면,
      html = window (하지만 html보단 window가 크다.)
      body = document (하지만 body보단 document가 크다.)


* 스크립트 주석
  1. // : 한 줄 주석
  2. /* */ : 여러 줄 주석


document.write("text");
  여기서 (" ") 내부 text는 <body> </body>안에 text 쓰는 것과 동일함
  따라서, (" ") 안에서 html 태그 사용 가능

  <script type="text/javascript">
    document.write("<p>다른 선언문에서 작성한 문장입니다.</p>");
  </script>

    하면, 구분된 문장처럼 보이나 개발자도구에서 body보면 외부 스크립트에 작성한 내용과는 다르게 보임.
    동일하게 보이게 하려면 외부 스크립트의 (" ")에도 <p></p> 적용시킨다.



1 + 2 = 3

Data Type (자료형) : 연산에 필요한 값들의 종류 /ex) 1 2 3
Operator (연산자) : 연산 기호들의 의미 /ex) + =

위 요소를 가지고서 (문법, 문장, 표현식)을 작성한다.

현재 우리가 찾고있는 자료는 ECMAScript v6 (ES6)
  (요즘은 ES7로 바뀌고 있는 추세다.)



*** 자료형 (Data Type) ***
연산에 사용되는 값의 종류

  * 상수 : 값이 정해져 있는 형식
    Number Object
      1. 정수
        - 음수(-), 소수(.)를 제외한 양의 실수
        - 8진수, 16진수 포함

      2. 실수
        - 실제 사용 가능한 모든 수

    String Object
      3. 문자형 상수(String)
        - 일반적인 텍스트
        - " " 사용
          But, 따옴표가 있다고해서 모든 것이 문자는 아니다.

    4. 불린(boolean)
      - true(1) / false(0)의 형식

    5. null
      - 값이 없음  <---> not null
        (없다는 것이지, 비어있는 것과는 다른것이다.)

      ex) 팝업창 운영방식은 2가지가 있음

          팝업창은 놔두고 홈페이지만 닫는다.
            -> 새로 페이지를 열었을 때 동일은 팝업창이 있다면 새로운 팝업창이 열리지 않도록 하는 경우
            -> 동일한 팝업창이지만 새로 페이지가 열리면서 팝업창도 새로 열리는 경우

      - undefined와 유사함
      (undefined) var a
      (null)      var a =



  * 변수(variable)
    1. 변할 수 있는 값
    2. 값을 저장하는 장소나 이름
      ex) a = 1 : 1을 a에 저장한다.
                  여기서 a의 역할 -> 저장하는 장소 -> 변수
    3. 변수 선언문 3가지
      - var : 변수 재선언 & 변수 재할당 가능, 생략 가능  /js에서 가장 오래 사용됨
              값을 다시 만들거나, 바꿀 수 있음.
              ex) var abc
      - let : 변수에 재할당  /최근 실무에서 사용
              값을 바꾸는건 가능하지만 다시 만들 수는 없음.
      - const : 변수 재선언, 변수 재할당 불가능
                한번 만든 값을 다시 만들기, 값을 바꾸기 할 수 없음.

      변수 이름이 중첩이 돼서 에러가 생기니까
      이를 방지하려고 let 변수가 생겨남.
      -------------------
      var a = 1;
      .
      .
      .
      var a = 1;         <-- 재선언
      .
      a = 2              <-- 재할당
      -------------------


      (예시)-------------
      var a=1;
      var a=1;           <-- let이면 여기 error🔴 / const이면 여기 error🔴
      a=2                <-- let이면 여기 okay    / const이면 여기 error🔴

      document.write(a);
      document.write(a);
      window.alert(a);
      -------------------

    4. 선언과 동시에 값 입력 가능
        ex) var abc = 1

            var abc
            abc = 1

            var a, b, c
                a = 1
                b = 2
                c = 3

            var a, b, c=1

            var a=b=c=1

    -Library
      jQuery, angular
    -Framework
      node.js
      react.js -일부 변수의 이름이 정해져 있는 경우 있음
      vue.js   -일부 변수의 이름이 정해져 있는 경우 있음

    * var 변수이름 = 값
      일반적으로 변수이름은 만들어서 사용하는 것이지만 규칙이 필요하다.

    ** 이름 규칙 **
      1. 알파벳, 숫자 사용 가능
      2. 한글, 특수문자, 공백 사용 불가
        (단, 특수문자 중 "_"는 사용 가능) -$도 사용 가능하기는 함.
      3. 첫번째 글자는 "_"또는 알파벳만 가능
      4. 대소문자 반드시 구분
      5. 예약어 사용 불가

      ⭐변수의 이름만 보고도 용도나 기능을 예상할 수 있게 네이밍하기



